import { FxError, Result } from "@microsoft/teamsfx-api";
import { PluginName, Plugins, PluginVersion, PluginPath, PluginURI } from "./type";
/**
 * manifest is a structure to describe the details of all loaded plugins.
 * version is a reserved property.
 */
interface Manifest {
    version: string;
    plugins: Record<PluginName, PluginVersion[]>;
}
export declare class Depot {
    /**
     * only support two kinds of package
     * 1. local path
     * 2. semantic version
     *
     * @param packages - the URI of a package
     * @returns True if validation passed
     *
     * TODO use json-schema to validate
     */
    private static validate;
    /**
     * This is a wrapper of 'npm install' and store all packages in address.
     *
     * npm install {@link https://docs.npmjs.com/cli/v8/commands/npm-install}
     *
     * @param packages - the URI of a package
     * @returns paths of dynamic plugins. If exceptions, return FxError
     */
    static install(packages: Plugins): Promise<Result<Record<PluginName, PluginPath>, FxError>>;
    static getManifest(): Promise<Manifest>;
    /**
     * @param name - plugin's name
     * @param version - if set, check specific version of plugin
     *
     * @returns whether plugin is existed or not
     */
    static has(name: PluginName, uri?: PluginURI): Promise<boolean>;
    private static saveManifest;
}
export {};
//# sourceMappingURL=depot.d.ts.map
"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.publishApplication = exports.addFeature = exports.getQuestionsForAddFeature = void 0;
const teamsfx_api_1 = require("@microsoft/teamsfx-api");
const typedi_1 = require("typedi");
const constants_1 = require("../fx-solution/v3/constants");
async function getQuestionsForAddFeature(ctx, inputs) {
    const plugin = typedi_1.Container.get(constants_1.BuiltInFeaturePluginNames.spfx);
    if (plugin.getQuestionsForAddInstance) {
        const childNode = await plugin.getQuestionsForAddInstance(ctx, inputs);
        if (childNode.isErr())
            return teamsfx_api_1.err(childNode.error);
        if (childNode.value) {
            return teamsfx_api_1.ok(childNode.value);
        }
    }
    return teamsfx_api_1.ok(undefined);
}
exports.getQuestionsForAddFeature = getQuestionsForAddFeature;
async function addFeature(ctx, inputs) {
    return teamsfx_api_1.ok(teamsfx_api_1.Void);
}
exports.addFeature = addFeature;
async function publishApplication(ctx, inputs, envInfo, tokenProvider) {
    return teamsfx_api_1.ok(teamsfx_api_1.Void);
}
exports.publishApplication = publishApplication;
//# sourceMappingURL=addFeature.js.map
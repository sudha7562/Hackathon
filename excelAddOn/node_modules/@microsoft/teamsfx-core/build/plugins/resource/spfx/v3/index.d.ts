import { FxError, Inputs, QTreeNode, Result, TokenProvider, v2, v3, Void } from "@microsoft/teamsfx-api";
import { DeepReadonly } from "@microsoft/teamsfx-api/build/v2";
import { SPFxPluginImpl } from "./plugin";
export declare class SPFxPluginV3 implements v3.PluginV3 {
    name: string;
    displayName: string;
    description: string;
    spfxPluginImpl: SPFxPluginImpl;
    getQuestionsForAddInstance(ctx: v2.Context, inputs: Inputs): Promise<Result<QTreeNode | undefined, FxError>>;
    addInstance(ctx: v3.ContextWithManifestProvider, inputs: v2.InputsWithProjectPath): Promise<Result<string[], FxError>>;
    deploy(ctx: v2.Context, inputs: v2.InputsWithProjectPath, envInfo: DeepReadonly<v3.EnvInfoV3>, tokenProvider: TokenProvider): Promise<Result<Void, FxError>>;
}
//# sourceMappingURL=index.d.ts.map